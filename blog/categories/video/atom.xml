<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Video | Haxin Mainframes]]></title>
  <link href="http://bbarrows.github.com/blog/categories/video/atom.xml" rel="self"/>
  <link href="http://bbarrows.github.com/"/>
  <updated>2014-11-05T14:12:14-08:00</updated>
  <id>http://bbarrows.github.com/</id>
  <author>
    <name><![CDATA[Brad Barrows]]></name>
    <email><![CDATA[bradleyb1537@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to Record Live Video From PyCon]]></title>
    <link href="http://bbarrows.github.com/blog/2013/03/15/pycon/"/>
    <updated>2013-03-15T12:30:00-07:00</updated>
    <id>http://bbarrows.github.com/blog/2013/03/15/pycon</id>
    <content type="html"><![CDATA[<p>PyCon has so many awesome talks! The problem is that they are happening at the same time!</p>

<p>To deal with this I have a 2 part solution:</p>

<ul>
<li>First I goto a page I want to watch and run this JS code I whipped up to grab the actual video URLS:</li>
</ul>


<p>JS Code:</p>

<pre><code>for (m in player_jwobject.config.modes) {
    console.log(player_jwobject.config.modes[m].type);
    if (player_jwobject.config.modes[m].config.levels) {
        for (l in player_jwobject.config.modes[m].config.levels) {
            console.log(" - " + player_jwobject.config.modes[m].config.levels[l].file)
        }
    }
};
</code></pre>

<p>Note that this code gives you both html5 and flash options for streaming video. And will look like this:</p>

<pre><code>html5
 - http://50.16.83.230:8080/webcast-low.webm?q=1363375116439
 - http://50.16.83.230:8080/webcast-high.webm?q=1363375116439
flash
 - http://50.16.83.230:8080/webcast-low.flv?q=1363375116439
 - http://50.16.83.230:8080/webcast-high.flv?q=1363375116439
download
</code></pre>

<ul>
<li>Chose and dump one of these streams. Either will probably work fine however I chose to low quality html5 stream:</li>
</ul>


<p>Command to run (requires mplayer):</p>

<pre><code>mplayer -dumpstream "http://50.16.83.230:8080/webcast-low.webm?q=1363375116439"\
 -dumpfile interpetermplayer
</code></pre>

<p>Or use ffmpeg:</p>

<pre><code>ffmpeg -i http://50.16.160.194:8080/webcast-high.webm\?q\=1363381000621 pycon.webm
</code></pre>

<p>This will save the webm stream to a file called: interpetermplayer</p>
]]></content>
  </entry>
  
</feed>
