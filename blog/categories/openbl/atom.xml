<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Openbl | Haxin Mainframes]]></title>
  <link href="http://bbarrows.github.com/blog/categories/openbl/atom.xml" rel="self"/>
  <link href="http://bbarrows.github.com/"/>
  <updated>2014-11-05T14:12:14-08:00</updated>
  <id>http://bbarrows.github.com/</id>
  <author>
    <name><![CDATA[Brad Barrows]]></name>
    <email><![CDATA[bradleyb1537@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Installing OpenCL and PyOpenCL on Ubuntu 12.10]]></title>
    <link href="http://bbarrows.github.com/blog/2012/09/24/opencl-on-ubuntu-1210/"/>
    <updated>2012-09-24T22:47:00-07:00</updated>
    <id>http://bbarrows.github.com/blog/2012/09/24/opencl-on-ubuntu-1210</id>
    <content type="html"><![CDATA[<h1>The hassle of Intel OpenCL Dev</h1>

<h2>Trying to mine some damn bitcoin</h2>

<p>Fueled by the ridiculous BitCoin bubble and yes, I know, late to the game I decided I might as well start a bitcoin miner on an extra computer or two.</p>

<p>What I didnt expect is the huge pain in the ass that was installing the Intel OpenCL libs/headers..</p>

<p>Ill try to sum this up as quickly as possible:</p>

<p>I started with <a href="http://develnoter.blogspot.com/2012/05/installing-opencl-in-ubuntu-1204.html">this guys blog entry on installing OpenCL on ubuntu</a> which</p>

<p>This is directly from his site, slightly modified:</p>

<hr />

<ol>
<li>Download the <a href="http://software.intel.com/en-us/articles/vcsource-tools-opencl-sdk/">Intel SDK for OpenCL Applications from Intel&rsquo;s web site</a>. The download options are not easy to spot in the messy page, they are on the top right bo. After downloading, you will end with a .tgz file with an RPM inside (crazy, I know).</li>
</ol>


<p>The guy who I stole this walk through from says he got the file :
    intel_sdk_for_ocl_applications_2012_x64.tgz.
NOTE!! I actually didnt see this option I downloaded the option with all the check marks for the beta that supported RedHat Linux. I got this file:
    intel_sdk_for_ocl_applications_2013_xe_beta_sdk_3.0.56860_x64.tgz</p>

<ol>
<li>Extract the RPM from the .tgz file:
 $ tar zxvf intel_sdk_for_ocl_applications_2012_x64.tgz</li>
</ol>


<p>This will extract the intel_ocl_sdk_2012_x64.rpm file.</p>

<ol>
<li>Convert the RPM file to .deb format and install:
 $ sudo apt-get install -y rpm alien libnuma1    # In case you don&rsquo;t have these packages
 $ fakeroot alien &ndash;to-deb intel_ocl_sdk_2012_x64.rpm</li>
</ol>


<p>The guy says to run:</p>

<pre><code>$ sudo dpkg -i intel-ocl-sdk_2.0-31361_amd64.deb
</code></pre>

<p>However you will probably have 4 diff debs. I just ran the following to install them all:
sudo dpkg -i *.deb</p>

<ol>
<li>Now the SDK and libraries will be installed to /usr/lib64, while Ubuntu expects them to be in /usr/lib. No problem, just make a symlink and update the library cache:
 $ sudo ln -s /usr/lib64/libOpenCL.so /usr/lib/libOpenCL.so
 $ sudo ldconfig</li>
</ol>


<p>That&rsquo;s it! OpenCL should be installed now. Let&rsquo;s try with a test program to see the device capabilities.</p>

<pre><code>#include &lt;iostream&gt;
#include &lt;CL/cl.hpp&gt;
#include &lt;boost/foreach.hpp&gt;

int main(int, char**) {
 std::vector&lt;cl::Platform&gt; platforms;
 cl::Platform::get(&amp;platforms);
 BOOST_FOREACH(cl::Platform platform, platforms) {
     std::cout &lt;&lt; "Platform: " &lt;&lt; platform.getInfo&lt;CL_PLATFORM_NAME&gt;() &lt;&lt; std::endl;
     std::vector&lt;cl::Device&gt; devices;
     platform.getDevices(CL_DEVICE_TYPE_GPU | CL_DEVICE_TYPE_CPU, &amp;devices);
     BOOST_FOREACH(cl::Device device, devices) {
         std::cout &lt;&lt; "Device: " &lt;&lt; device.getInfo&lt;CL_DEVICE_TYPE&gt;();
         std::cout &lt;&lt; " (" &lt;&lt; CL_DEVICE_TYPE_GPU &lt;&lt; " means GPU, " &lt;&lt; CL_DEVICE_TYPE_CPU &lt;&lt; " means CPU)" &lt;&lt; std::endl;
     }
 }
}
</code></pre>

<p>Save this snippet into opencl.cpp, compile and run:
$ g++ opencl.cpp -lOpenCL -o opencl &amp;&amp; ./opencl
Platform: Intel&reg; OpenCL
Device: 2 (4 means GPU, 2 means CPU)
This shows that this particular machine has one OpenCL-capable Intel CPU.</p>

<hr />

<p>So continuing on I basically kep trying to compile his example until it succesfully compiled and ran.</p>

<p>So along with installing the libs I needed the headers to do this I made the following dir:</p>

<pre><code>sudo mkdir -p /usr/local/cuda/include/CL
cd /usr/local/cuda/include/CL
sudo wget http://www.khronos.org/registry/cl/api/1.1/cl.hpp
sudo wget http://www.khronos.org/registry/cl/api/1.1/cl.h
sudo wget http://www.khronos.org/registry/cl/api/1.1/opencl.h
sudo wget http://www.khronos.org/registry/cl/api/1.1/cl_platform.h
sudo wget http://www.khronos.org/registry/cl/api/1.1/cl_gl.h
sudo wget http://www.khronos.org/registry/cl/api/1.1/cl_gl_ext.h
sudo wget http://www.khronos.org/registry/cl/api/1.1/cl_ext.h
sudo chmod -R a+r /usr/local/cuda
</code></pre>

<p>If you are missing any other headers try looking for the file under the
    <a href="http://www.khronos.org/registry/cl/api/1.1/">http://www.khronos.org/registry/cl/api/1.1/</a>
directory..</p>

<p>I also installed:</p>

<p>sudo apt-get install libboost-all-dev python-setuptools python-numpy</p>

<p>I actually installed numpy with pip but that should work too..</p>

<p>I downloaded <a href="https://pypi.python.org/pypi/pyopencl">PyOpenCL</a> and ran
    sudo python setup.py install
however it couldnt find the headers.</p>

<p>I actually just added the following line to setup.py, right before the line:
    INCLUDE_DIRS = conf[&ldquo;BOOST_INC_DIR&rdquo;] + conf[&ldquo;CL_INC_DIR&rdquo;]
I added:
    conf[&ldquo;CL_INC_DIR&rdquo;] = [&lsquo;/usr/local/cuda/include/&rsquo;, &lsquo;/usr/local/cuda/include/CL&rsquo;]</p>

<p>althouh you prob only need that first one..</p>

<p>then running:
    sudo python setup.py install
worked great..</p>
]]></content>
  </entry>
  
</feed>
